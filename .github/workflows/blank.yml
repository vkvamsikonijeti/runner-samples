# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}


      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2


      - name: Get GitHub Runner Public IP
        id: get-ip
        run: |
          gcloud container clusters describe test-demo --project pro-micron-457614-s7 --region us-west1 --format="value(masterAuthorizedNetworksConfig.cidrBlocks[].cidrBlock)" > current_ips.txt
          sed -i 's/;/,/g' current_ips.txt
          cp current_ips.txt current_ips_bkp.txt
          echo `curl -s https://api.ipify.org`\/32 >> current_ips.txt
          ip_list=$(paste -sd, current_ips.txt)
   
      - name: Add Runner IP to GKE Control Plane
        run: |
          gcloud container clusters update test-demo \
            --project pro-micron-457614-s7 \
            --region us-west1 \
            --enable-master-authorized-networks --master-authorized-networks $ip_list
        #gcloud container clusters update elastic-idea-apps-platform-dev-primary \
        #  --project elastic-edm-dev \
        #  --region us-west1 \
        #  --enable-master-authorized-networks \
        #  --master-authorized-networks "${RUNNER_IP}/32"
      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin


      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials test-demo \
            --project pro-micron-457614-s7 \
            --region us-west1


      - name: Deploy All Services via Kustomize
        run: |
          kubectl apply -f kubedeploys/simple-deploy.yml


      - name: Verify All Rollouts
        run: |
          kubectl rollout status deployment/simple-deploy
        # kubectl rollout status deployment/api
        # kubectl rollout status deployment/backend




      - name: Remove Runner IP from GKE Control Plane
        if: always()
        run: |
          ip_list=$(paste -sd, current_ips_bkp.txt)
          gcloud container clusters update test-demo \
            --project pro-micron-457614-s7 \
            --region us-west1 \
            --enable-master-authorized-networks --master-authorized-networks $ip_list
        #gcloud container clusters update elastic-idea-apps-platform-dev-primary \
        #  --project elastic-edm-dev \
        #  --region us-west1 \
        #  --master-authorized-networks "0.0.0.0/32"

    
